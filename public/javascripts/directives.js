// Generated by CoffeeScript 1.3.3
(function() {
  "use strict";

  var CHART_FONT, directives, renderLine, renderLineHourly, renderPie;

  directives = angular.module("jstracker.directives", []);

  directives.directive("errortable", function() {
    return function(scope, element, attrs) {
      return scope.$watch("msg", function() {
        renderPie(element);
        renderLine(element);
        return renderLineHourly(element);
      });
    };
  });

  directives.directive("loading", [
    "$rootScope", function($rootScope) {
      return function(scope, element, attrs) {
        element.addClass("hide");
        $rootScope.$on("$routeChangeStart", function() {
          return element.removeClass("hide");
        });
        return $rootScope.$on("$routeChangeSuccess", function() {
          return element.addClass("hide");
        });
      };
    }
  ]);

  directives.directive("ng-view", function() {
    return function(scope, element, attrs) {
      return scope.$watch("host", function() {
        return setTimeout(function() {
          return console.log(11);
        }, 0);
      });
    };
  });

  CHART_FONT = '"Lucida Grande", Helvetica, Arial, sans-serif';

  renderPie = function(element) {
    var data, el, pie;
    el = element.find("div.pie-chart");
    if (!google || !google.visualization || !el || !el[0] || !el[0].innerHTML.trim()) {
      return setTimeout(function() {
        return renderPie(element);
      }, 200);
    }
    data = new google.visualization.DataTable;
    data.addColumn("string", "Browser");
    data.addColumn("number", "Occurrences");
    data.addRows(JSON.parse(el.html()));
    pie = new google.visualization.PieChart(el[0]);
    return pie.draw(data, {
      width: '80%',
      height: 150,
      chartArea: {
        left: 0,
        right: 0,
        top: 0,
        width: '100%',
        height: 150
      },
      title: 'Occurrences across browsers',
      legend: 'right',
      legendTextStyle: {
        fontName: CHART_FONT,
        fontSize: 12
      },
      pieSliceTextStyle: {
        fontName: CHART_FONT,
        fontSize: 12
      },
      is3D: true,
      backgroundColor: "transparent"
    });
  };

  renderLine = function(element) {
    var data, el, line;
    el = element.find("div.line-chart");
    if (!google || !google.visualization || !el || !el[0] || !el[0].innerHTML.trim()) {
      return setTimeout(function() {
        return renderLine(element);
      }, 200);
    }
    data = new google.visualization.DataTable;
    data.addColumn("string", "Days ago");
    data.addColumn("number", "Occurrences");
    data.addRows(JSON.parse(el.html()));
    line = new google.visualization.LineChart(el[0]);
    return line.draw(data, {
      chartArea: {
        left: 0,
        right: 0,
        width: "83%",
        height: 100
      },
      hAxis: {
        title: "最近 15 天走势",
        titleTextStyle: {
          color: "#999",
          fontSize: 12,
          fontName: CHART_FONT
        }
      },
      vAxis: {
        gradlineColor: "#f6f6f6",
        baselineColor: "#ccc",
        textPosition: "in",
        textStyle: {
          color: "#999",
          fontName: CHART_FONT
        },
        fontName: CHART_FONT
      },
      height: 130
    });
  };

  renderLineHourly = function(element) {
    var data, el, i, item, json, line;
    el = element.find("div.line-chart-hourly");
    if (!google || !google.visualization || !el || !el[0] || !el[0].innerHTML.trim()) {
      return setTimeout(function() {
        return renderLineHourly(element);
      }, 1000);
    }
    data = new google.visualization.DataTable;
    data.addColumn("string", "Days ago");
    data.addColumn("number", "Occurrences");
    json = el.html().split(",");
    json = (function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = json.length; _i < _len; i = ++_i) {
        item = json[i];
        _results.push(["" + i + "点钟", parseInt(item, 10)]);
      }
      return _results;
    })();
    data.addRows(json);
    line = new google.visualization.LineChart(el[0]);
    return line.draw(data, {
      chartArea: {
        left: 0,
        right: 0,
        width: "83%",
        height: 100
      },
      hAxis: {
        title: "最近 24 小时走势",
        titleTextStyle: {
          color: "#999",
          fontSize: 12,
          fontName: CHART_FONT
        }
      },
      vAxis: {
        gradlineColor: "#f6f6f6",
        baselineColor: "#ccc",
        textPosition: "in",
        textStyle: {
          color: "#999",
          fontName: CHART_FONT
        },
        fontName: CHART_FONT
      },
      height: 130
    });
  };

}).call(this);
